<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sustech.edu.phantom.dboj.mapper.ProblemMapper">
    <select id="queryProblemWithoutFilter" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
               assignment_id,
               title,
               description,
               full_score,
               space_limit,
               time_limit,
               number_submit,
               number_solve,
               index_in_assignment,
               solution
        from "problem"
        where valid
          and status = 'public'
        order by id
        offset #{offset} limit #{limit};
    </select>
    <select id="queryCurrentProblem" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
               assignment_id,
               title,
               description,
               full_score,
               space_limit,
               time_limit,
               number_submit,
               number_solve,
               index_in_assignment,
               solution
        from "problem"
        where valid
          and status = 'public'
          and id = #{id};
    </select>
    <update id="invalidateProblem">
        update "problem"
        set valid = false
        where id = #{id};
    </update>
    <update id="validateProblem">
        update "problem"
        set valid = true
        where id = #{id};
    </update>
    <select id="oneAssignmentProblems" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
               assignment_id,
               title,
               description,
               full_score,
               space_limit,
               time_limit,
               number_submit,
               number_solve,
               index_in_assignment,
               solution
        from "problem"
        where assignment_id = #{id}
          and status = 'public'
        order by index_in_assignment;
    </select>
    <select id="oneTagProblems" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
               assignment_id,
               title,
               description,
               full_score,
               space_limit,
               time_limit,
               number_submit,
               number_solve,
               index_in_assignment,
               solution
        from "problem"
        where valid
          and id in (
            select distinct problem_id
            from "problem_tag"
            where valid
              and tag_id = #{id})
          and status = 'public';
    </select>
    <update id="updateProblemInfo">
        update "problem"
        set number_submit = #{numberSubmit} , number_solve = #{numberSolve}
        where id = #{id};
    </update>
    <select id="queryProblemsByTags" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
        assignment_id,
        title,
        description,
        full_score,
        space_limit,
        time_limit,
        number_submit,
        number_solve,
        index_in_assignment,
        solution
        from "problem"
        where valid
        and status = 'public'
        and id in (select distinct problem_id from "problem_tag" where valid and tag_id in (
        <foreach collection="tags" index="index" item="tag" separator="," close="">
            #{tag}
        </foreach>
        )) order by id offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemsByTagsCounter" resultType="java.lang.Integer">
        select count(*) over ()
        from "problem"
        where valid
        and status = 'public'
        and id in (select distinct problem_id from "problem_tag" where valid and tag_id in (
        <foreach collection="tags" index="index" item="tag" separator="," close="">
            #{tag}
        </foreach>
        ))offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemsByTagAndName" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
        assignment_id,
        title,
        description,
        full_score,
        space_limit,
        time_limit,
        number_submit,
        number_solve,
        index_in_assignment,
        solution
        from "problem"
        where valid
        and status = 'public'
        and (id in (select distinct problem_id from "problem_tag" where valid and tag_id in (
        <foreach collection="tags" index="index" item="tag" separator="," close="">
            #{tag}
        </foreach>)
        or title like '%'||#{title}||'%'))
        order by id offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemsByTagAndNameCounter" resultType="java.lang.Integer">
        select count(*)
        from "problem"
        where valid
        and status = 'public'
        and (id in (select distinct problem_id from "problem_tag" where valid and tag_id in (
        <foreach collection="tags" index="index" item="tag" separator="," close="">
            #{tag}
        </foreach>)
        or title like '%'||#{title}||'%'))
        offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemsByName" resultType="sustech.edu.phantom.dboj.entity.Problem">
        select id,
               assignment_id,
               title,
               description,
               full_score,
               space_limit,
               time_limit,
               number_submit,
               number_solve,
               index_in_assignment,
               solution
        from "problem"
        where valid
          and status = 'public'
          and title like '%' || #{title} || '%'
        order by id
        offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemsByNameCounter" resultType="java.lang.Integer">
        select count(*)
        from "problem"
        where valid
          and status = 'public'
          and title like '%' || #{title} || '%'
        offset #{param1.offset} limit #{param1.limit};
    </select>
    <select id="queryProblemWithoutFilterCounter" resultType="java.lang.Integer">
        select count(*)
        from "problem"
        where valid
          and status = 'public'
        offset #{offset} limit #{limit};
    </select>
</mapper>