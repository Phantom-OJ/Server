<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sustech.edu.phantom.dboj.mapper.UserMapper">
    <select id="login" parameterType="sustech.edu.phantom.dboj.entity.po.User"
            resultType="sustech.edu.phantom.dboj.entity.po.User">
        select id,
               username,
               nickname,
               role,
               avatar,
               state_save,
               state,
               lang
        from "user"
        where valid
          and username = #{username,jdbcType=VARCHAR}
          and password = #{password,jdbcType=VARCHAR};
    </select>
    <insert id="initUserGroup">
        insert into "user_group" (user_id, group_id)
        VALUES (#{id}, 1);
    </insert>
    <insert id="register" parameterType="sustech.edu.phantom.dboj.entity.po.User" useGeneratedKeys="true">
        insert into "user" (username, password, nickname)
        values (#{username,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{nickname,jdbcType=VARCHAR})
    </insert>
    <select id="findUserByUsername" resultType="sustech.edu.phantom.dboj.entity.po.User">
        select *
        from "user"
        where username = #{param1};
    </select>
    <select id="findUserByName" resultType="sustech.edu.phantom.dboj.entity.po.User">
        select *
        from "user"
        where nickname = #{name}
           or username = #{name};
    </select>
    <update id="updateUserInfo">
        update "user"
        set nickname   = #{userForm.nickname},
            state_save = #{userForm.stateSave},
            lang       = #{userForm.lang}
        where id = #{userId}
    </update>
    <select id="findUserById" resultType="sustech.edu.phantom.dboj.entity.po.User">
        select id,
               username,
               nickname,
               role,
               avatar,
               state_save,
               state,
               lang,
               valid
        from "user"
        where id = #{userId};
    </select>
    <update id="resetPassword">
        update "user"
        set password = #{password}
        where username = #{username};
    </update>
    <update id="modifyPassword">
        update "user"
        set password = #{password}
        where username = #{username};
    </update>
    <update id="saveState">
        update "user"
        set state = #{state}
        where id = #{id};
    </update>
    <select id="getState" resultType="java.lang.String">
        select state
        from "user"
        where id = #{id};
    </select>
    <update id="uploadAvatar">
        update "user"
        set avatar = #{filePath}
        where id = #{uid};
    </update>
    <update id="grantUser">
        update "user" set role=#{role} where id in (
        <foreach collection="list" index="index" item="l" separator="," close="">
            #{l}
        </foreach>
        );
    </update>

    <select id="findOneUserGroup" resultType="sustech.edu.phantom.dboj.entity.po.Group">
        select g.id, g.description
        from "user_group" ug
                 join "group" g on ug.group_id = g.id and g.valid and ug.valid
        where user_id = #{uid};
    </select>
    <select id="findUserByFilterMixed" resultType="sustech.edu.phantom.dboj.entity.po.User">
        select u.id, u.username, u.nickname, u.role, u.avatar
        from "user" u
        join user_group ug on u.id = ug.user_id and ug.valid
        where u.username like '%' || #{list.username} || '%'
        <if test="list.group!=0">
            and ug.group_id = #{list.group}
        </if>
        and u.role like '%'||#{list.role}||'%'
        except
        select u.id, u.username, u.nickname, u.role, u.avatar
        from "user" u
        join user_group ug on u.id = ug.user_id and ug.valid
        where
        <if test="list.notGroup!=0">
            ug.group_id = #{list.notGroup} or
        </if>
        u.role = #{list.notRole}
        limit 50;
    </select>
    <select id="checkUsrGroup" resultType="java.lang.Integer">
        select count(*)
        from user_group
        where group_id = #{gid}
          and user_id = #{uid};
    </select>
    <update id="saveUserGroup">
        <choose>
            <when test="flag">
                update user_group
                set valid = true
                where group_id = #{gid}
                and user_id = #{uid};
            </when>
            <otherwise>
                insert into user_group (user_id, group_id) VALUES (#{uid},#{gid});
            </otherwise>
        </choose>
    </update>


    <update id="deleteUserGroup">
        update user_group
        set valid = false
        where group_id = #{gid}
          and user_id = #{uid};
    </update>
</mapper>